
define WIDTH_PERCENT 0.6
define PICK_HEIGTH -20

define _10_PRCENT 0.1
define _50_PRCENT 0.5
define _60_PRCENT 0.6
define _90_PRCENT 0.9

function setPoint(x, y, z, w, p, r){
	robot_fanuc->set_real_di("x", x);
	robot_fanuc->set_real_di("y", y);
	robot_fanuc->set_real_di("z", z);
	robot_fanuc->set_real_di("w", w);
	robot_fanuc->set_real_di("p", p);
	robot_fanuc->set_real_di("r", r);
}

function moveToPoint(x, y, z, w, p, r){
	setPoint(x, y, z, w, p, r);
	robot_fanuc->run_program(3); // Linear move
}

function drawLine(x1, y1, x2, y2, z, w, p, r){
	moveToPoint(x1, y1, z, w, p, r);
	moveToPoint(x2, y2, z, w, p, r);
}

function printCoords(x,y,z){
	system.echo("\n ************************************ \n");
	system.echo("x: ", x, "\ny: ", y, "\nz: ", z);
	system.echo("\n ************************************ \n");
}

function drawA(pos_x, pos_y, pos_z, k){
	heigth = k;
	width = WIDTH_PERCENT*k;

	system.echo("h: ", heigth, "\nw: ", width);
	// Получим углы
	robot_fanuc->run_program(6);
	w = robot_fanuc->get_real_do("w");
	p = robot_fanuc->get_real_do("p");
	r = robot_fanuc->get_real_do("r");

	// Встанем на исходную позицию
	moveToPoint(pos_x, pos_y, pos_z + PICK_HEIGTH, w, p, r);
	system.sleep(200);
	// придем в точку (над точкой начала линии)
	x1 = pos_x + width*_10_PRCENT;
	y1 = pos_y + heigth*_90_PRCENT;
	printCoords(x1, y1, pos_z + PICK_HEIGTH);
	moveToPoint(x1, y1, pos_z + PICK_HEIGTH, w, p, r);

	// Придем в точку начала линии, и нарисуем линию
	x2 = pos_x + width*_50_PRCENT;
	y2 = pos_y + heigth*_10_PRCENT;
	printCoords(x2, y2, pos_z);
	drawLine(x1, y1, x2, y2, pos_z, w, p, r);

	// нарисуем следующю линию
	x3 = pos_x + width*_90_PRCENT;
	y3 = pos_y + heigth*_90_PRCENT;
	printCoords(x3, y3, pos_z);
	drawLine(x2, y2, x3, y3, pos_z, w, p, r);

	// придем в точу над концом текущей линии
	moveToPoint(x3, y3, pos_z + PICK_HEIGTH, w, p, r);

	// придем в точку над началом следующей линии
	y4 = pos_y + heigth*_60_PRCENT;
	x4 = x3  + (y4-y3)*(x3-x2)/(y3-y2); // math.abs(y4*(x3-x2)/(y3-y2));
	printCoords(x4, y4, pos_z);
	moveToPoint(x4, y4, pos_z + PICK_HEIGTH, w, p, r);

	// проведем линию
	y5 = pos_y + heigth*_60_PRCENT;
	x5 = x1 +  (y5-y1)*(x2-x1)/(y2-y1);// math.abs(y5*(x2-x1)/(y2-y1));
	printCoords(x5, y5, pos_z);
	drawLine(x4, y4, x5, y5, pos_z, w, p, r);

	// поднимем перо
	moveToPoint(x5, y5, pos_z + PICK_HEIGTH, w, p, r);

	// придем в начало  
	moveToPoint(pos_x, pos_y, pos_z + PICK_HEIGTH, w, p, r);
}

function main() {
	system.echo("\nwork\n");

	try{
		@fr = robot_fanuc;
		@fr->set_integer_di("uframe", 3);
		@fr->set_integer_di("tool", 2);
		@fr->set_integer_di("payload", 3);
		@fr->set_real_di("speed", 20);
		delete @fr;

		system.echo("\nSetup\n");
		system.sleep(1000);
		drawA(600, 300, 0, 50);
	} 
	catch{
		system.echo("catch exception\n");
	}

  	system.echo("\nEnd\n");
}